$toc-padding: rem(0.4);

$group-item-height: rem(4);
$layer-item-height: rem(6.0);

@mixin toc {

    rv-toc {
        // override default padding on the content
        .rv-content-pane .rv-content {
            padding: 0;
        }
    }

    .rv-toc {
        padding: rem(0.8) 0;
        @include layer-list;

        &-progress-indicator {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 2px;
            overflow: hidden;
            z-index: 10;
        }
    }
}

@mixin layer-list {
    .rv-layer-level {
        // relative boxes list shadow to the current list
        position: relative;

        @for $i from 0 to 10 {
            @include layer-level-step($i);
        }
    }

    .rv-layer-list {
        list-style: none;
        padding: 0;
        max-width: 100%;

        > li {
            overflow: auto;
            // TODO: move to a separate file maybe or a separate mixin
            //$du: $swift-ease-in-duration;
            //$de: $swift-ease-in-duration * 0.3;

            /*&.ng-enter {
                transition: transform $du + $de $swift-ease-in-out-timing-function $de, margin $du $swift-ease-in-out-timing-function 0s;
            }

            &.ng-leave {
                transition: transform $du $swift-ease-in-out-timing-function 0s, margin $du + $de $swift-ease-in-out-timing-function $de;
            }

            &.ng-enter {
                transform: translate3d(100%, 0, 0);
                margin-bottom: - rem(4.8); // make sure it matches layer item height
            }

            &.ng-leave-active {
                transform: translate3d(-100%, 0, 0);
                margin-bottom: - rem(4.8); // make sure it matches layer item height
            }

            &.ng-enter-active {
                transform: translate3d(0, 0, 0);
                margin-bottom: 0;
            }

            &.ng-enter-stagger,
            &.ng-leave-stagger {
                transition-duration: 0;
                transition-delay: 200ms;
            }*/
        }
        // rotate the icon on the toggle button on open
        .md-toggle-icon {
            transition: transform $swift-ease-in-duration $swift-ease-in-out-timing-function;

            &.rv-toggled {
                transform: rotate(90deg);
            }
        }
        // need to hide overflow during open/close animations so the layer list content displays properly
        &.ng-animate {
            overflow: hidden;
            // prevent toggle icon from animationg during list animation
            .md-toggle-icon {
                transition: none;
            }
        }
        // do not add padding to the root level layer list
        &.rv-root {
            padding-left: 0;
            margin: 0;
            position: relative;
        }

        &.ng-hide + .rv-shadow {
            // hide list shadow when the layer list is closed; otherwise, it will still be visilbe
            background-color: transparent !important;
        }

        .rv-layer-list-divider {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
        }

        @include layer-group-toggle;
        @include layer-item;
    }
    // rv-shadow is a thin guideline drawn on the right side of the list when group toggle is hovered over;
    // it helps to visualize which layers will be affected by the group toggle
    .rv-shadow {
        position: absolute;
        right: 0;
        top: 0;
        bottom: 0;
        width: rem(0.3);
        opacity: 0.45;
        background-color: transparent;
        transition: background-color $swift-ease-in-duration $swift-ease-in-out-timing-function;
    }
}
// http://krasimirtsonev.com/blog/article/Two-handy-and-advanced-SASS-features-and-their-limitations
// adjust layer item, layer group toggle, and layer list divider indent

@mixin layer-level-step($index) {
    &.rv-#{$index} {
        $offset: rem(0.8); // multiplied by the indentation level

        rv-layer-item {
            padding-left: $offset * ($index + 1) + rem(1.0) + $toc-padding;
        }

        rv-layer-group-toggle {
            padding-left: $offset * ($index) + rem(1.0) + $toc-padding;
        }

        .rv-layer-list-divider {
            left: ($offset + rem(1.0) + $toc-padding) * $index;
        }
    }
}
/*
absolutely position a button underneath an item so it acts like a button body for the item; add content to it using aria labels; make the actual text not pronounceable by aria as well or something like that. this should work for both layer items and layer group toggles;
*/
@mixin layer-group-toggle {

    rv-layer-group-toggle {
        height: $group-item-height;
        position: relative;
        display: flex;
        align-items: center;
        z-index: 0;
        padding-right: $toc-padding;

        // setting layer list shadow color when hover over layer group toggle
        &:hover ~ .rv-shadow {
            background-color: $primary-color;
        }

        .rv-layer-group-body-button {
            text-align: left;
            position: absolute;
            padding: 0;
            margin: 0;
            top: 0; // anchor the button to its parent container
            bottom: 0;
            left: 0;
            width: 100%;
            z-index: 1; // this is needed to place the button over the rotating icon as it's creating a new stacking content when transformed
        }

        .rv-layer-group-controls {
            z-index: 2;
        }

        .rv-layer-group-toggle-icon {
            padding: rem(0.4);
        }

        .rv-layer-group-toggle-name {
            margin-left: rem(0.8);
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            font-size: rem(1.6);
        }
    }
}

@mixin layer-item {
    rv-layer-item {

        display: flex;
        align-items: center;
        height: $layer-item-height;
        position: relative;
        padding-right: $toc-padding;

        .rv-layer-body-button {
            text-align: left;
            position: absolute;
            padding: 0;
            margin: 0;
            left: 0;
            width: 100%;
            top: 0;
            bottom: 0;
        }

        .rv-layer-item-content {
            flex: 1; // content tries to take all available space
            min-width: 0; // Firefox fix for flexbox not wanting to shrink: http://stackoverflow.com/a/31349707
            margin: 0 rem(1.0) 0 rem(1.6);

            .rv-layer-item-name {
                font-size: rem(1.6);
                // truncate layer name if it's too long
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }

            .rv-layer-item-flag {
                display: inline-block;
                margin: 0 rem(0.2);
                // main layer item button was overlapting the flag
                position: relative; // why? http://philipwalton.com/articles/what-no-one-told-you-about-z-index/
                &:first-child {
                    margin-left: 0;
                }
            }
        }

        // remove margins between toggle on legend layer entry
        .rv-layer-item-toggles > * {
            &:first-child > .md-button {
                margin-right: 0;
            }
            &:last-child > .md-button {
                margin-left: 0;
            }
        }

        // hide layer toggles except the visibility toggle
        .rv-layer-item-toggles > md-menu {
            &:not([name='visibility']) {
                display: none;
            }
        }

        // visually highlights selected layer item in the list
        &.rv-selected {
            // don't hide toggles on a selected layer
            .rv-layer-item-toggles > md-menu {
                display: inline !important; // IE doesn't support `initial`
            }

            &:before {
                background-color: $accent-color;
            }
        }

        // selection indicator
        &:before {
            position: absolute;
            content: "";
            background-color: transparent;
            width: rem(0.3);
            right: 0;
            height: 100%;
            top: 0;
            transition: background-color $swift-ease-in-duration $swift-ease-in-out-timing-function;
        }

        // TODO: fix
        &.rv-error {
            .rv-layer-item-toggles > md-menu {
                display: inline-block;
            }

            .rv-layer-item-caption {
                color: $alert-color;
            }

            &:before {
                background-color: $alert-color;
            }
        }

        &:hover {
            .rv-layer-item-toggles > md-menu {
                display: inline-block;
            }
        }
    }
}
